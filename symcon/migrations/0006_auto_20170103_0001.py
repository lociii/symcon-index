# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-01-02 23:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('symcon', '0005_auto_20170101_2006'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Branch')),
                ('last_update', models.DateTimeField(blank=True, null=True, verbose_name='Last update')),
                ('default', models.BooleanField(default=False, verbose_name='Default')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Repository', verbose_name='Repository')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(verbose_name='Identifier')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Repository', verbose_name='Repository')),
            ],
            options={
                'verbose_name': 'Library',
                'verbose_name_plural': 'Libraries',
            },
        ),
        migrations.CreateModel(
            name='LibraryBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Name')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('min_version', models.CharField(blank=True, max_length=200, verbose_name='Minimum Symcon version')),
                ('author', models.CharField(blank=True, max_length=200, verbose_name='Author')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('version', models.CharField(blank=True, max_length=50, verbose_name='Version')),
                ('build', models.IntegerField(blank=True, null=True, verbose_name='Build')),
                ('date', models.IntegerField(blank=True, null=True, verbose_name='Date')),
                ('readme_markdown', models.TextField(blank=True, verbose_name='Readme MarkDown')),
                ('readme_html', models.TextField(blank=True, verbose_name='Readme HTML')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Branch', verbose_name='Branch')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Library', verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Library branch',
                'ordering': ('-branch__default', 'name'),
                'verbose_name_plural': 'Library branches',
            },
        ),
        migrations.CreateModel(
            name='LibraryBranchTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('librarybranch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.LibraryBranch', verbose_name='Library branch')),
            ],
            options={
                'verbose_name': 'Library branch tag',
                'ordering': ('librarybranch', 'name'),
                'verbose_name_plural': 'Library branche tags',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(verbose_name='Identifier')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Name')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('type', models.IntegerField(blank=True, choices=[(0, 'Core'), (1, 'I/O'), (2, 'Splitter'), (3, 'Device'), (4, 'Configurator')], null=True, verbose_name='Type')),
                ('vendor', models.CharField(blank=True, max_length=200, verbose_name='Vendor')),
                ('prefix', models.CharField(blank=True, max_length=200, verbose_name='Prefix')),
                ('readme_markdown', models.TextField(blank=True, verbose_name='Readme MarkDown')),
                ('readme_html', models.TextField(blank=True, verbose_name='Readme HTML')),
                ('librarybranch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.LibraryBranch', verbose_name='Library branch')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
            },
        ),
        migrations.CreateModel(
            name='ModuleAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('deleted', models.BooleanField(default=False, verbose_name='Marked for deletion')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Module', verbose_name='Module')),
            ],
            options={
                'verbose_name': 'Module alias',
                'verbose_name_plural': 'Module aliases',
            },
        ),
        migrations.CreateModel(
            name='ModuleChildRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(verbose_name='Identifier')),
                ('deleted', models.BooleanField(default=False, verbose_name='Marked for deletion')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Module', verbose_name='Module')),
            ],
            options={
                'verbose_name': 'Module child requirement',
                'verbose_name_plural': 'Module child requirements',
            },
        ),
        migrations.CreateModel(
            name='ModuleImplementedRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(verbose_name='Identifier')),
                ('deleted', models.BooleanField(default=False, verbose_name='Marked for deletion')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Module', verbose_name='Module')),
            ],
            options={
                'verbose_name': 'Module implemented requirement',
                'verbose_name_plural': 'Module implemented requirements',
            },
        ),
        migrations.CreateModel(
            name='ModuleParentRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(verbose_name='Identifier')),
                ('deleted', models.BooleanField(default=False, verbose_name='Marked for deletion')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symcon.Module', verbose_name='Module')),
            ],
            options={
                'verbose_name': 'Module parent requirement',
                'verbose_name_plural': 'Module parent requirements',
            },
        ),
        migrations.AlterUniqueTogether(
            name='moduleparentrequirement',
            unique_together=set([('module', 'uuid')]),
        ),
        migrations.AlterUniqueTogether(
            name='moduleimplementedrequirement',
            unique_together=set([('module', 'uuid')]),
        ),
        migrations.AlterUniqueTogether(
            name='modulechildrequirement',
            unique_together=set([('module', 'uuid')]),
        ),
        migrations.AlterUniqueTogether(
            name='modulealias',
            unique_together=set([('module', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together=set([('librarybranch', 'uuid')]),
        ),
        migrations.AlterUniqueTogether(
            name='librarybranchtag',
            unique_together=set([('librarybranch', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='librarybranch',
            unique_together=set([('library', 'branch')]),
        ),
        migrations.AlterUniqueTogether(
            name='library',
            unique_together=set([('repository', 'uuid')]),
        ),
        migrations.AlterUniqueTogether(
            name='branch',
            unique_together=set([('repository', 'name')]),
        ),
    ]
